[INFO ] 2020-11-26T17:24:18,862Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java ... {}
[INFO ] 2020-11-26T17:24:19,017Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-11-26T17:24:19,967Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-11-26T17:24:20,745Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-11-26T17:24:20,757Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-11-26T17:24:20,757Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-11-26T17:24:21,215Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-11-26T17:24:21,237Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-11-26T17:24:21,624Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-11-26T17:24:21,624Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-11-26T17:24:21,625Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-11-26T17:24:21,756Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-11-26T17:24:21,766Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-11-26T17:24:22,192Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-11-26T17:24:22,412Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-11-26T17:24:22,424Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-11-26T17:24:22,459Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-11-26T17:24:22,460Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-11-26T17:24:22,460Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-11-26T17:24:22,872Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-11-26T17:24:22,872Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-11-26T17:24:22,894Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-11-26T17:24:22,894Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-11-26T17:24:22,905Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-11-26T17:24:22,905Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-11-26T17:24:22,905Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-11-26T17:24:22,905Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-11-26T17:24:22,905Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-11-26T17:24:22,905Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-11-26T17:24:23,267Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-11-26T17:24:23,267Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-11-26T17:24:23,313Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-11-26T17:24:23,313Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-11-26T17:24:23,336Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-11-26T17:24:23,336Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-11-26T17:24:23,436Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-11-26T17:24:23,437Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-11-26T17:24:23,497Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-11-26T17:24:23,497Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-11-26T17:24:23,573Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-26T17:24:23,594Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-11-26T17:24:23,628Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-11-26T17:24:23,672Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-11-26T17:24:23,672Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-11-26T17:24:23,685Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-11-26T17:24:23,685Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-11-26T17:24:23,685Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-11-26T17:24:23,705Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-26T17:24:23,705Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-11-26T17:24:23,705Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-26T17:24:23,705Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-11-26T17:24:23,706Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-26T17:24:23,706Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-11-26T17:24:23,718Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-11-26T17:24:23,742Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-11-26T17:24:23,742Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-11-26T17:24:23,754Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-11-26T17:24:23,754Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-26T17:24:23,754Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-11-26T17:24:23,765Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-26T17:24:23,766Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-11-26T17:24:23,766Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-11-26T17:24:23,841Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-11-26T17:24:23,844Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-11-26T17:24:23,854Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-11-26T17:24:23,864Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-11-26T17:24:23,865Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-11-26T17:24:23,865Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-26T17:24:23,865Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-11-26T17:24:23,875Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-26T17:24:23,875Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-11-26T17:24:23,875Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-26T17:24:23,875Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-11-26T17:24:23,876Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-11-26T17:24:23,909Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-11-26T17:24:23,909Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-11-26T17:24:23,919Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-11-26T17:24:23,919Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-11-26T17:24:23,919Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-11-26T17:24:23,919Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-11-26T17:24:23,919Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-11-26T17:24:23,919Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-11-26T17:24:23,919Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-11-26T17:24:23,920Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-11-26T17:24:23,920Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-11-26T17:24:23,920Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-11-26T17:24:23,920Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-11-26T17:24:23,920Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-11-26T17:24:23,930Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-11-26T17:24:23,930Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-26T17:24:23,931Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-11-26T17:24:23,931Z [Connection worker] internal.TestCordappImpl. - Clean stale outputs {}
[INFO ] 2020-11-26T17:24:23,931Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-11-26T17:24:25,455Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-26T17:24:25,455Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-11-26T17:24:25,456Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-11-26T17:24:25,456Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-11-26T17:24:25,469Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-11-26T17:24:25,469Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/cordapp-example-kyc/.gradle {}
[INFO ] 2020-11-26T17:24:25,469Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-11-26T17:24:25,490Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-11-26T17:24:29,442Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201126-172417.902-4059271518D2CD0A/nodes/0/cordapps] {}
[INFO ] 2020-11-26T17:24:29,448Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172417.902-4059271518D2CD0A/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172417.902-4059271518D2CD0A/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-11-26T17:24:29,457Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172417.902-4059271518D2CD0A/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-11-26T17:24:29,517Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172417.902-4059271518D2CD0A/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-11-26T17:24:30,152Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:30,498Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-26T17:24:30,533Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-26T17:24:30,607Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-11-26T17:24:30,723Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-26T17:24:16.298Z
      epoch=1
  } {}
[WARN ] 2020-11-26T17:24:34,157Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.example.schema.IOUSchema v1 {}
[INFO ] 2020-11-26T17:24:34,218Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-26T17:24:34,299Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-26T17:24:34,304Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-26T17:24:36,543Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-26T17:24:36,944Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-26T17:24:36,944Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411476944) {}
[INFO ] 2020-11-26T17:24:36,949Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-26T17:24:37,080Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411476944) {}
[INFO ] 2020-11-26T17:24:37,125Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-26T17:24:37,143Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-26T17:24:37,145Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-26T17:24:37,149Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411476944) {}
[INFO ] 2020-11-26T17:24:37,175Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:37,258Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B9F752269DF5534033B7F71155D37338ED66E85901C784FD208FCD389B59670D uploader=app filename=CorDapp Example {}
[INFO ] 2020-11-26T17:24:37,264Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2020-11-26T17:24:37,719Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411476944) {}
[INFO ] 2020-11-26T17:24:37,727Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411476944) {}
[INFO ] 2020-11-26T17:24:37,728Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:37,728Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411476944) {}
[INFO ] 2020-11-26T17:24:37,728Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:37,734Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201126-172417.902-4059271518D2CD0A/nodes/1/cordapps] {}
[INFO ] 2020-11-26T17:24:37,734Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172417.902-4059271518D2CD0A/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172417.902-4059271518D2CD0A/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-11-26T17:24:37,734Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172417.902-4059271518D2CD0A/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-11-26T17:24:37,741Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172417.902-4059271518D2CD0A/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-11-26T17:24:37,763Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:37,763Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-26T17:24:37,764Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-26T17:24:37,785Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-11-26T17:24:37,788Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-26T17:24:16.298Z
      epoch=1
  } {}
[WARN ] 2020-11-26T17:24:38,287Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.example.schema.IOUSchema v1 {}
[INFO ] 2020-11-26T17:24:38,305Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-26T17:24:38,310Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:38,310Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:38,440Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:38,441Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-11-26T17:24:38,461Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-26T17:24:38,461Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411478461) {}
[INFO ] 2020-11-26T17:24:38,462Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:38,470Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411478461) {}
[INFO ] 2020-11-26T17:24:38,478Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-26T17:24:38,482Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-26T17:24:38,482Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-26T17:24:38,486Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411478461) {}
[INFO ] 2020-11-26T17:24:38,492Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:38,522Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B9F752269DF5534033B7F71155D37338ED66E85901C784FD208FCD389B59670D uploader=app filename=CorDapp Example {}
[INFO ] 2020-11-26T17:24:38,549Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411478461) {}
[INFO ] 2020-11-26T17:24:38,549Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411476944) {}
[INFO ] 2020-11-26T17:24:38,551Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-26T17:24:38,564Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411478461) {}
[INFO ] 2020-11-26T17:24:38,566Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:38,579Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411478461) {}
[INFO ] 2020-11-26T17:24:38,579Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:38,579Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411478461) {}
[INFO ] 2020-11-26T17:24:38,579Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:38,586Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201126-172417.902-4059271518D2CD0A/nodes/2/cordapps] {}
[INFO ] 2020-11-26T17:24:38,587Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172417.902-4059271518D2CD0A/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172417.902-4059271518D2CD0A/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-11-26T17:24:38,587Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172417.902-4059271518D2CD0A/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-11-26T17:24:38,595Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172417.902-4059271518D2CD0A/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-11-26T17:24:38,619Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:38,619Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-26T17:24:38,620Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-26T17:24:38,643Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-11-26T17:24:38,646Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-26T17:24:16.298Z
      epoch=1
  } {}
[WARN ] 2020-11-26T17:24:38,858Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.example.schema.IOUSchema v1 {}
[INFO ] 2020-11-26T17:24:38,873Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-26T17:24:38,874Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:38,874Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:38,991Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:38,993Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-11-26T17:24:39,013Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-26T17:24:39,013Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411479013) {}
[INFO ] 2020-11-26T17:24:39,014Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:39,023Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411479013) {}
[INFO ] 2020-11-26T17:24:39,029Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-26T17:24:39,029Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-26T17:24:39,029Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-26T17:24:39,032Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411479013) {}
[INFO ] 2020-11-26T17:24:39,037Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:39,063Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B9F752269DF5534033B7F71155D37338ED66E85901C784FD208FCD389B59670D uploader=app filename=CorDapp Example {}
[INFO ] 2020-11-26T17:24:39,081Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411479013) {}
[INFO ] 2020-11-26T17:24:39,081Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411476944) {}
[INFO ] 2020-11-26T17:24:39,082Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-26T17:24:39,091Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411479013) {}
[INFO ] 2020-11-26T17:24:39,091Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:39,101Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411478461) {}
[INFO ] 2020-11-26T17:24:39,101Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:39,109Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411479013) {}
[INFO ] 2020-11-26T17:24:39,109Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:39,117Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411479013) {}
[INFO ] 2020-11-26T17:24:39,117Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:39,117Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411479013) {}
[INFO ] 2020-11-26T17:24:39,117Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-11-26T17:24:39,118Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-11-26T17:24:39,118Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-11-26T17:24:39,122Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-11-26T17:24:39,122Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-11-26T17:24:39,345Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c30ccbe7-1a1d-4dde-b354-38bd88469e60, invocation_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, invocation_timestamp=2020-11-26T17:24:39.169Z, origin=Only For Testing, session_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, session_timestamp=2020-11-26T17:24:39.169Z, thread-id=383}
[WARN ] 2020-11-26T17:24:39,345Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract com.example.contract.IOUContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c30ccbe7-1a1d-4dde-b354-38bd88469e60, invocation_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, invocation_timestamp=2020-11-26T17:24:39.169Z, origin=Only For Testing, session_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, session_timestamp=2020-11-26T17:24:39.169Z, thread-id=383}
[ERROR] 2020-11-26T17:24:39,552Z [Mock network] internal.Verifier. - Error validating transaction 78EF8D4E04E43CAFD0580C75E5A0CAFB8539DA1E3F7DFAF9C9C350622B3D0C0E. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c30ccbe7-1a1d-4dde-b354-38bd88469e60, invocation_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, invocation_timestamp=2020-11-26T17:24:39.169Z, origin=Only For Testing, session_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, session_timestamp=2020-11-26T17:24:39.169Z, thread-id=383}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.6.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.6.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:427) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:379) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:212) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:625) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:633) ~[corda-core-4.6.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.6.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_252]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_252]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.6.jar:?]
[ERROR] 2020-11-26T17:24:39,554Z [Mock network] internal.Verifier. - Error validating transaction 78EF8D4E04E43CAFD0580C75E5A0CAFB8539DA1E3F7DFAF9C9C350622B3D0C0E. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c30ccbe7-1a1d-4dde-b354-38bd88469e60, invocation_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, invocation_timestamp=2020-11-26T17:24:39.169Z, origin=Only For Testing, session_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, session_timestamp=2020-11-26T17:24:39.169Z, thread-id=383}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.6.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.6.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:427) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:379) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:212) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:633) ~[corda-core-4.6.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.6.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_252]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_252]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.6.jar:?]
[INFO ] 2020-11-26T17:24:39,554Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 78EF8D4E04E43CAFD0580C75E5A0CAFB8539DA1E3F7DFAF9C9C350622B3D0C0E. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c30ccbe7-1a1d-4dde-b354-38bd88469e60, invocation_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, invocation_timestamp=2020-11-26T17:24:39.169Z, origin=Only For Testing, session_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, session_timestamp=2020-11-26T17:24:39.169Z, thread-id=383}
[INFO ] 2020-11-26T17:24:39,559Z [Mock network] statemachine.StaffedFlowHospital. - Flow [c30ccbe7-1a1d-4dde-b354-38bd88469e60] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=0796d31c-9e2a-4992-8ee2-56d1d25ec404, timestamp: 2020-11-26T17:24:39.169Z, entityType: Invocation, sessionId=0796d31c-9e2a-4992-8ee2-56d1d25ec404, timestamp: 2020-11-26T17:24:39.169Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=cordapp-example-workflows-0.1, corDappHash=D52286532973A44F39D78A70C81CBDF316230C10547F781250D8DA5DADCC9824), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=5AAF817956FA06560F88CFBA281A42D9A37A4D1A57682D21251B4651C47E769E), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=com.example.flow.ExampleFlow$Initiator@4b60e44a, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=baf6cdec-4112-4026-aeed-a37d0a5c7226, reloadCheckpointAfterSuspendCount=null, numberOfCommits=0, lock=java.util.concurrent.Semaphore@d5b2b46[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c30ccbe7-1a1d-4dde-b354-38bd88469e60, invocation_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, invocation_timestamp=2020-11-26T17:24:39.169Z, origin=Only For Testing, session_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, session_timestamp=2020-11-26T17:24:39.169Z, thread-id=383}
[INFO ] 2020-11-26T17:24:39,561Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c30ccbe7-1a1d-4dde-b354-38bd88469e60, invocation_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, invocation_timestamp=2020-11-26T17:24:39.169Z, origin=Only For Testing, session_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, session_timestamp=2020-11-26T17:24:39.169Z, thread-id=383}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 78EF8D4E04E43CAFD0580C75E5A0CAFB8539DA1E3F7DFAF9C9C350622B3D0C0E
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:429) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:379) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:212) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:633) ~[corda-core-4.6.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.6.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_252]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_252]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.6.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.6.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.6.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:427) ~[corda-core-4.6.jar:?]
	... 19 more
[INFO ] 2020-11-26T17:24:39,564Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c30ccbe7-1a1d-4dde-b354-38bd88469e60, invocation_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, invocation_timestamp=2020-11-26T17:24:39.169Z, origin=Only For Testing, session_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, session_timestamp=2020-11-26T17:24:39.169Z, thread-id=383}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 78EF8D4E04E43CAFD0580C75E5A0CAFB8539DA1E3F7DFAF9C9C350622B3D0C0E
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:429) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:379) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:212) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:633) ~[corda-core-4.6.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.6.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_252]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_252]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.6.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.6.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.6.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:427) ~[corda-core-4.6.jar:?]
	... 19 more
[WARN ] 2020-11-26T17:24:39,578Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [c30ccbe7-1a1d-4dde-b354-38bd88469e60] errored, dumping all transitions:

 --- Transition of flow [c30ccbe7-1a1d-4dde-b354-38bd88469e60] ---
  Timestamp: 2020-11-26T17:24:39.316Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[c30ccbe7-1a1d-4dde-b354-38bd88469e60], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=0796d31c-9e2a-4992-8ee2-56d1d25ec404, timestamp: 2020-11-26T17:24:39.169Z, entityType: Invocation, sessionId=0796d31c-9e2a-4992-8ee2-56d1d25ec404, timestamp: 2020-11-26T17:24:39.169Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=cordapp-example-workflows-0.1, corDappHash=D52286532973A44F39D78A70C81CBDF316230C10547F781250D8DA5DADCC9824), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=5AAF817956FA06560F88CFBA281A42D9A37A4D1A57682D21251B4651C47E769E), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@6e2e5ae5])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@6e2e5ae5])
    SignalFlowHasStarted(flowId=[c30ccbe7-1a1d-4dde-b354-38bd88469e60])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@6e2e5ae5]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [c30ccbe7-1a1d-4dde-b354-38bd88469e60] ---
  Timestamp: 2020-11-26T17:24:39.566Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 78EF8D4E04E43CAFD0580C75E5A0CAFB8539DA1E3F7DFAF9C9C350622B3D0C0E, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=7239942577744144611, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 78EF8D4E04E43CAFD0580C75E5A0CAFB8539DA1E3F7DFAF9C9C350622B3D0C0E)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2020-11-26T17:24:39.268Z
    2020-11-26T17:24:39.557Z


 --- Transition of flow [c30ccbe7-1a1d-4dde-b354-38bd88469e60] ---
  Timestamp: 2020-11-26T17:24:39.570Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [c30ccbe7-1a1d-4dde-b354-38bd88469e60] ---
  Timestamp: 2020-11-26T17:24:39.572Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2020-11-26T17:24:39.557Z
    2020-11-26T17:24:39.572Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c30ccbe7-1a1d-4dde-b354-38bd88469e60, invocation_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, invocation_timestamp=2020-11-26T17:24:39.169Z, origin=Only For Testing, session_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, session_timestamp=2020-11-26T17:24:39.169Z, thread-id=383}
[WARN ] 2020-11-26T17:24:39,578Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [c30ccbe7-1a1d-4dde-b354-38bd88469e60] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c30ccbe7-1a1d-4dde-b354-38bd88469e60, invocation_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, invocation_timestamp=2020-11-26T17:24:39.169Z, origin=Only For Testing, session_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, session_timestamp=2020-11-26T17:24:39.169Z, thread-id=383}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 78EF8D4E04E43CAFD0580C75E5A0CAFB8539DA1E3F7DFAF9C9C350622B3D0C0E
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:429) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:379) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:212) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:633) ~[corda-core-4.6.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.6.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_252]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_252]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.6.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.6.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.6.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:427) ~[corda-core-4.6.jar:?]
	... 19 more
[WARN ] 2020-11-26T17:24:39,581Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c30ccbe7-1a1d-4dde-b354-38bd88469e60, invocation_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, invocation_timestamp=2020-11-26T17:24:39.169Z, origin=Only For Testing, session_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, session_timestamp=2020-11-26T17:24:39.169Z, thread-id=383}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 78EF8D4E04E43CAFD0580C75E5A0CAFB8539DA1E3F7DFAF9C9C350622B3D0C0E
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:429) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:379) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:212) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:633) ~[corda-core-4.6.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.6.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_252]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_252]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.6.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.6.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.6.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:427) ~[corda-core-4.6.jar:?]
	... 19 more
[WARN ] 2020-11-26T17:24:39,612Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [c30ccbe7-1a1d-4dde-b354-38bd88469e60] errored, dumping all transitions:

 --- Transition of flow [c30ccbe7-1a1d-4dde-b354-38bd88469e60] ---
  Timestamp: 2020-11-26T17:24:39.316Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[c30ccbe7-1a1d-4dde-b354-38bd88469e60], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=0796d31c-9e2a-4992-8ee2-56d1d25ec404, timestamp: 2020-11-26T17:24:39.169Z, entityType: Invocation, sessionId=0796d31c-9e2a-4992-8ee2-56d1d25ec404, timestamp: 2020-11-26T17:24:39.169Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=cordapp-example-workflows-0.1, corDappHash=D52286532973A44F39D78A70C81CBDF316230C10547F781250D8DA5DADCC9824), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=5AAF817956FA06560F88CFBA281A42D9A37A4D1A57682D21251B4651C47E769E), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@6e2e5ae5])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@6e2e5ae5])
    SignalFlowHasStarted(flowId=[c30ccbe7-1a1d-4dde-b354-38bd88469e60])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@6e2e5ae5]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [c30ccbe7-1a1d-4dde-b354-38bd88469e60] ---
  Timestamp: 2020-11-26T17:24:39.566Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 78EF8D4E04E43CAFD0580C75E5A0CAFB8539DA1E3F7DFAF9C9C350622B3D0C0E, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=7239942577744144611, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 78EF8D4E04E43CAFD0580C75E5A0CAFB8539DA1E3F7DFAF9C9C350622B3D0C0E)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2020-11-26T17:24:39.268Z
    2020-11-26T17:24:39.557Z


 --- Transition of flow [c30ccbe7-1a1d-4dde-b354-38bd88469e60] ---
  Timestamp: 2020-11-26T17:24:39.570Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [c30ccbe7-1a1d-4dde-b354-38bd88469e60] ---
  Timestamp: 2020-11-26T17:24:39.572Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2020-11-26T17:24:39.557Z
    2020-11-26T17:24:39.572Z


 --- Transition of flow [c30ccbe7-1a1d-4dde-b354-38bd88469e60] ---
  Timestamp: 2020-11-26T17:24:39.608Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 78EF8D4E04E43CAFD0580C75E5A0CAFB8539DA1E3F7DFAF9C9C350622B3D0C0E, errorId=7239942577744144611)], sessions=[], senderUUID=baf6cdec-4112-4026-aeed-a37d0a5c7226)
    CreateTransaction
    RemoveCheckpoint(id=[c30ccbe7-1a1d-4dde-b354-38bd88469e60], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=c30ccbe7-1a1d-4dde-b354-38bd88469e60)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[c30ccbe7-1a1d-4dde-b354-38bd88469e60], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=7239942577744144611, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 78EF8D4E04E43CAFD0580C75E5A0CAFB8539DA1E3F7DFAF9C9C350622B3D0C0E)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=0796d31c-9e2a-4992-8ee2-56d1d25ec404, timestamp: 2020-11-26T17:24:39.169Z, entityType: Invocation, sessionId=0796d31c-9e2a-4992-8ee2-56d1d25ec404, timestamp: 2020-11-26T17:24:39.169Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=cordapp-example-workflows-0.1, corDappHash=D52286532973A44F39D78A70C81CBDF316230C10547F781250D8DA5DADCC9824), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=2), flowState=net.corda.node.services.statemachine.FlowState$Finished@2220fef5, errorState=Errored(errors=[FlowError(errorId=7239942577744144611, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 78EF8D4E04E43CAFD0580C75E5A0CAFB8539DA1E3F7DFAF9C9C350622B3D0C0E)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=com.example.flow.ExampleFlow$Initiator@4b60e44a, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, senderUUID=baf6cdec-4112-4026-aeed-a37d0a5c7226, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@d5b2b46[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
numberOfCommits: 
    0
    2
isRemoved: 
    false
    true
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=5AAF817956FA06560F88CFBA281A42D9A37A4D1A57682D21251B4651C47E769E)
    net.corda.node.services.statemachine.FlowState$Finished@2220fef5
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.timestamp: 
    2020-11-26T17:24:39.572Z
    2020-11-26T17:24:39.579Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c30ccbe7-1a1d-4dde-b354-38bd88469e60, invocation_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, invocation_timestamp=2020-11-26T17:24:39.169Z, origin=Only For Testing, session_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, session_timestamp=2020-11-26T17:24:39.169Z, thread-id=383}
[WARN ] 2020-11-26T17:24:39,612Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [c30ccbe7-1a1d-4dde-b354-38bd88469e60] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c30ccbe7-1a1d-4dde-b354-38bd88469e60, invocation_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, invocation_timestamp=2020-11-26T17:24:39.169Z, origin=Only For Testing, session_id=0796d31c-9e2a-4992-8ee2-56d1d25ec404, session_timestamp=2020-11-26T17:24:39.169Z, thread-id=383}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 78EF8D4E04E43CAFD0580C75E5A0CAFB8539DA1E3F7DFAF9C9C350622B3D0C0E
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:429) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:379) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:212) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:633) ~[corda-core-4.6.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.6.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_252]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_252]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.6.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.6.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.6.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:427) ~[corda-core-4.6.jar:?]
	... 19 more
[INFO ] 2020-11-26T17:24:39,652Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2020-11-26T17:24:39,664Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-26T17:24:39,664Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:39,666Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2020-11-26T17:24:39,673Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-26T17:24:39,673Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:39,674Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2020-11-26T17:24:39,680Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-26T17:24:39,680Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:39,748Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201126-172439.685-4EFF77A95E52A1DC/nodes/0/cordapps] {}
[INFO ] 2020-11-26T17:24:39,748Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172439.685-4EFF77A95E52A1DC/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172439.685-4EFF77A95E52A1DC/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-11-26T17:24:39,748Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172439.685-4EFF77A95E52A1DC/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-11-26T17:24:39,753Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172439.685-4EFF77A95E52A1DC/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-11-26T17:24:39,770Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:39,771Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-26T17:24:39,771Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-26T17:24:39,774Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-11-26T17:24:39,778Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-26T17:24:39.685Z
      epoch=1
  } {}
[WARN ] 2020-11-26T17:24:40,030Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.example.schema.IOUSchema v1 {}
[INFO ] 2020-11-26T17:24:40,042Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-26T17:24:40,050Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-26T17:24:40,050Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-26T17:24:40,163Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-26T17:24:40,167Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-26T17:24:40,167Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411480167) {}
[INFO ] 2020-11-26T17:24:40,168Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-26T17:24:40,181Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411480167) {}
[INFO ] 2020-11-26T17:24:40,190Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-26T17:24:40,190Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-26T17:24:40,190Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-26T17:24:40,193Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411480167) {}
[INFO ] 2020-11-26T17:24:40,197Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:40,217Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B9F752269DF5534033B7F71155D37338ED66E85901C784FD208FCD389B59670D uploader=app filename=CorDapp Example {}
[INFO ] 2020-11-26T17:24:40,218Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2020-11-26T17:24:40,229Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411480167) {}
[INFO ] 2020-11-26T17:24:40,230Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411480167) {}
[INFO ] 2020-11-26T17:24:40,230Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:40,230Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411480167) {}
[INFO ] 2020-11-26T17:24:40,230Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:40,239Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201126-172439.685-4EFF77A95E52A1DC/nodes/1/cordapps] {}
[INFO ] 2020-11-26T17:24:40,239Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172439.685-4EFF77A95E52A1DC/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172439.685-4EFF77A95E52A1DC/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-11-26T17:24:40,239Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172439.685-4EFF77A95E52A1DC/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-11-26T17:24:40,244Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172439.685-4EFF77A95E52A1DC/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-11-26T17:24:40,260Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:40,261Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-26T17:24:40,261Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-26T17:24:40,281Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-11-26T17:24:40,283Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-26T17:24:39.685Z
      epoch=1
  } {}
[WARN ] 2020-11-26T17:24:40,458Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.example.schema.IOUSchema v1 {}
[INFO ] 2020-11-26T17:24:40,473Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-26T17:24:40,475Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:40,475Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:40,558Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:40,559Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-11-26T17:24:40,571Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-26T17:24:40,571Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411480571) {}
[INFO ] 2020-11-26T17:24:40,572Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:40,578Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411480571) {}
[INFO ] 2020-11-26T17:24:40,583Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-26T17:24:40,583Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-26T17:24:40,583Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-26T17:24:40,585Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411480571) {}
[INFO ] 2020-11-26T17:24:40,589Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:40,605Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B9F752269DF5534033B7F71155D37338ED66E85901C784FD208FCD389B59670D uploader=app filename=CorDapp Example {}
[INFO ] 2020-11-26T17:24:40,619Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411480571) {}
[INFO ] 2020-11-26T17:24:40,619Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411480167) {}
[INFO ] 2020-11-26T17:24:40,620Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-26T17:24:40,627Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411480571) {}
[INFO ] 2020-11-26T17:24:40,628Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:40,635Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411480571) {}
[INFO ] 2020-11-26T17:24:40,635Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:40,635Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411480571) {}
[INFO ] 2020-11-26T17:24:40,635Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:40,640Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201126-172439.685-4EFF77A95E52A1DC/nodes/2/cordapps] {}
[INFO ] 2020-11-26T17:24:40,640Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172439.685-4EFF77A95E52A1DC/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172439.685-4EFF77A95E52A1DC/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-11-26T17:24:40,640Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172439.685-4EFF77A95E52A1DC/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-11-26T17:24:40,646Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172439.685-4EFF77A95E52A1DC/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-11-26T17:24:40,664Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:40,664Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-26T17:24:40,665Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-26T17:24:40,681Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-11-26T17:24:40,683Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-26T17:24:39.685Z
      epoch=1
  } {}
[WARN ] 2020-11-26T17:24:40,860Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.example.schema.IOUSchema v1 {}
[INFO ] 2020-11-26T17:24:40,871Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-26T17:24:40,872Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:40,872Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:40,951Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:40,952Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-11-26T17:24:40,965Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-26T17:24:40,965Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411480965) {}
[INFO ] 2020-11-26T17:24:40,967Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:40,971Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411480965) {}
[INFO ] 2020-11-26T17:24:40,975Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-26T17:24:40,975Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-26T17:24:40,975Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-26T17:24:40,977Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411480965) {}
[INFO ] 2020-11-26T17:24:40,981Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:41,002Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B9F752269DF5534033B7F71155D37338ED66E85901C784FD208FCD389B59670D uploader=app filename=CorDapp Example {}
[INFO ] 2020-11-26T17:24:41,014Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411480965) {}
[INFO ] 2020-11-26T17:24:41,014Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411480167) {}
[INFO ] 2020-11-26T17:24:41,015Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-26T17:24:41,022Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411480965) {}
[INFO ] 2020-11-26T17:24:41,022Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:41,030Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411480571) {}
[INFO ] 2020-11-26T17:24:41,031Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:41,037Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411480965) {}
[INFO ] 2020-11-26T17:24:41,038Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:41,044Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411480965) {}
[INFO ] 2020-11-26T17:24:41,044Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:41,044Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411480965) {}
[INFO ] 2020-11-26T17:24:41,044Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-11-26T17:24:41,044Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-11-26T17:24:41,044Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-11-26T17:24:41,045Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-11-26T17:24:41,045Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-11-26T17:24:41,355Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=8c27c823-4c29-466a-8bb3-2c8e9c092dc4, invocation_id=82725148-5881-4238-b347-db0a7e26398b, invocation_timestamp=2020-11-26T17:24:41.318Z, origin=O=Mock Company 1, L=London, C=GB, session_id=82725148-5881-4238-b347-db0a7e26398b, session_timestamp=2020-11-26T17:24:41.318Z, thread-id=714, tx_id=733C37E845E61119762B065161B4A5ADD7F38B52DA0B4349532FD1BCECCF75B4}
[INFO ] 2020-11-26T17:24:41,396Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=8c27c823-4c29-466a-8bb3-2c8e9c092dc4, invocation_id=82725148-5881-4238-b347-db0a7e26398b, invocation_timestamp=2020-11-26T17:24:41.318Z, origin=O=Mock Company 1, L=London, C=GB, session_id=82725148-5881-4238-b347-db0a7e26398b, session_timestamp=2020-11-26T17:24:41.318Z, thread-id=714, tx_id=733C37E845E61119762B065161B4A5ADD7F38B52DA0B4349532FD1BCECCF75B4}
[INFO ] 2020-11-26T17:24:41,512Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=8969f1c0-c705-4b55-9739-235184893a39, invocation_id=40f344c6-7c26-49a6-9524-f3ea10b05925, invocation_timestamp=2020-11-26T17:24:41.046Z, origin=Only For Testing, session_id=40f344c6-7c26-49a6-9524-f3ea10b05925, session_timestamp=2020-11-26T17:24:41.046Z, thread-id=714, tx_id=733C37E845E61119762B065161B4A5ADD7F38B52DA0B4349532FD1BCECCF75B4}
[INFO ] 2020-11-26T17:24:41,512Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=8969f1c0-c705-4b55-9739-235184893a39, invocation_id=40f344c6-7c26-49a6-9524-f3ea10b05925, invocation_timestamp=2020-11-26T17:24:41.046Z, origin=Only For Testing, session_id=40f344c6-7c26-49a6-9524-f3ea10b05925, session_timestamp=2020-11-26T17:24:41.046Z, thread-id=714, tx_id=733C37E845E61119762B065161B4A5ADD7F38B52DA0B4349532FD1BCECCF75B4}
[INFO ] 2020-11-26T17:24:41,560Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=8969f1c0-c705-4b55-9739-235184893a39, invocation_id=40f344c6-7c26-49a6-9524-f3ea10b05925, invocation_timestamp=2020-11-26T17:24:41.046Z, origin=Only For Testing, session_id=40f344c6-7c26-49a6-9524-f3ea10b05925, session_timestamp=2020-11-26T17:24:41.046Z, thread-id=714, tx_id=733C37E845E61119762B065161B4A5ADD7F38B52DA0B4349532FD1BCECCF75B4}
[INFO ] 2020-11-26T17:24:41,595Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=8c27c823-4c29-466a-8bb3-2c8e9c092dc4, invocation_id=82725148-5881-4238-b347-db0a7e26398b, invocation_timestamp=2020-11-26T17:24:41.318Z, origin=O=Mock Company 1, L=London, C=GB, session_id=82725148-5881-4238-b347-db0a7e26398b, session_timestamp=2020-11-26T17:24:41.318Z, thread-id=714, tx_id=733C37E845E61119762B065161B4A5ADD7F38B52DA0B4349532FD1BCECCF75B4}
[INFO ] 2020-11-26T17:24:41,603Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=8c27c823-4c29-466a-8bb3-2c8e9c092dc4, invocation_id=82725148-5881-4238-b347-db0a7e26398b, invocation_timestamp=2020-11-26T17:24:41.318Z, origin=O=Mock Company 1, L=London, C=GB, session_id=82725148-5881-4238-b347-db0a7e26398b, session_timestamp=2020-11-26T17:24:41.318Z, thread-id=714, tx_id=733C37E845E61119762B065161B4A5ADD7F38B52DA0B4349532FD1BCECCF75B4}
[INFO ] 2020-11-26T17:24:41,605Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000003, flow-id=8c27c823-4c29-466a-8bb3-2c8e9c092dc4, invocation_id=82725148-5881-4238-b347-db0a7e26398b, invocation_timestamp=2020-11-26T17:24:41.318Z, origin=O=Mock Company 1, L=London, C=GB, session_id=82725148-5881-4238-b347-db0a7e26398b, session_timestamp=2020-11-26T17:24:41.318Z, thread-id=714, tx_id=733C37E845E61119762B065161B4A5ADD7F38B52DA0B4349532FD1BCECCF75B4}
[INFO ] 2020-11-26T17:24:41,613Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000003, flow-id=8c27c823-4c29-466a-8bb3-2c8e9c092dc4, invocation_id=82725148-5881-4238-b347-db0a7e26398b, invocation_timestamp=2020-11-26T17:24:41.318Z, origin=O=Mock Company 1, L=London, C=GB, session_id=82725148-5881-4238-b347-db0a7e26398b, session_timestamp=2020-11-26T17:24:41.318Z, thread-id=714, tx_id=733C37E845E61119762B065161B4A5ADD7F38B52DA0B4349532FD1BCECCF75B4}
[INFO ] 2020-11-26T17:24:41,626Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=8969f1c0-c705-4b55-9739-235184893a39, invocation_id=40f344c6-7c26-49a6-9524-f3ea10b05925, invocation_timestamp=2020-11-26T17:24:41.046Z, origin=Only For Testing, session_id=40f344c6-7c26-49a6-9524-f3ea10b05925, session_timestamp=2020-11-26T17:24:41.046Z, thread-id=714, tx_id=733C37E845E61119762B065161B4A5ADD7F38B52DA0B4349532FD1BCECCF75B4}
[INFO ] 2020-11-26T17:24:41,626Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=8969f1c0-c705-4b55-9739-235184893a39, invocation_id=40f344c6-7c26-49a6-9524-f3ea10b05925, invocation_timestamp=2020-11-26T17:24:41.046Z, origin=Only For Testing, session_id=40f344c6-7c26-49a6-9524-f3ea10b05925, session_timestamp=2020-11-26T17:24:41.046Z, thread-id=714, tx_id=733C37E845E61119762B065161B4A5ADD7F38B52DA0B4349532FD1BCECCF75B4}
[INFO ] 2020-11-26T17:24:41,634Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2020-11-26T17:24:41,640Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-26T17:24:41,640Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:41,641Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-5) {}
[INFO ] 2020-11-26T17:24:41,646Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-26T17:24:41,646Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:41,646Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-6) {}
[INFO ] 2020-11-26T17:24:41,650Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-26T17:24:41,650Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:41,703Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201126-172441.651-D8AC861A8658DCA8/nodes/0/cordapps] {}
[INFO ] 2020-11-26T17:24:41,703Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172441.651-D8AC861A8658DCA8/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172441.651-D8AC861A8658DCA8/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-11-26T17:24:41,703Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172441.651-D8AC861A8658DCA8/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-11-26T17:24:41,708Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172441.651-D8AC861A8658DCA8/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-11-26T17:24:41,723Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:41,724Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-26T17:24:41,725Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-26T17:24:41,728Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-11-26T17:24:41,734Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-26T17:24:41.651Z
      epoch=1
  } {}
[WARN ] 2020-11-26T17:24:41,986Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.example.schema.IOUSchema v1 {}
[INFO ] 2020-11-26T17:24:41,997Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-26T17:24:42,003Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-26T17:24:42,003Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-26T17:24:42,099Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-26T17:24:42,103Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-26T17:24:42,103Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411482103) {}
[INFO ] 2020-11-26T17:24:42,105Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-26T17:24:42,116Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411482103) {}
[INFO ] 2020-11-26T17:24:42,124Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-26T17:24:42,125Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-26T17:24:42,125Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-26T17:24:42,127Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411482103) {}
[INFO ] 2020-11-26T17:24:42,131Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:42,156Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B9F752269DF5534033B7F71155D37338ED66E85901C784FD208FCD389B59670D uploader=app filename=CorDapp Example {}
[INFO ] 2020-11-26T17:24:42,158Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2020-11-26T17:24:42,169Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411482103) {}
[INFO ] 2020-11-26T17:24:42,169Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411482103) {}
[INFO ] 2020-11-26T17:24:42,169Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:42,170Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411482103) {}
[INFO ] 2020-11-26T17:24:42,170Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:42,175Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201126-172441.651-D8AC861A8658DCA8/nodes/1/cordapps] {}
[INFO ] 2020-11-26T17:24:42,175Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172441.651-D8AC861A8658DCA8/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172441.651-D8AC861A8658DCA8/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-11-26T17:24:42,175Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172441.651-D8AC861A8658DCA8/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-11-26T17:24:42,187Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172441.651-D8AC861A8658DCA8/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-11-26T17:24:42,205Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:42,206Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-26T17:24:42,206Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-26T17:24:42,222Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-11-26T17:24:42,224Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-26T17:24:41.651Z
      epoch=1
  } {}
[WARN ] 2020-11-26T17:24:42,397Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.example.schema.IOUSchema v1 {}
[INFO ] 2020-11-26T17:24:42,416Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-26T17:24:42,418Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:42,418Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:42,498Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:42,499Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-11-26T17:24:42,514Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-26T17:24:42,514Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411482514) {}
[INFO ] 2020-11-26T17:24:42,515Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:42,519Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411482514) {}
[INFO ] 2020-11-26T17:24:42,523Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-26T17:24:42,523Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-26T17:24:42,523Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-26T17:24:42,526Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411482514) {}
[INFO ] 2020-11-26T17:24:42,529Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:42,551Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B9F752269DF5534033B7F71155D37338ED66E85901C784FD208FCD389B59670D uploader=app filename=CorDapp Example {}
[INFO ] 2020-11-26T17:24:42,568Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411482514) {}
[INFO ] 2020-11-26T17:24:42,568Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411482103) {}
[INFO ] 2020-11-26T17:24:42,569Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-26T17:24:42,576Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411482514) {}
[INFO ] 2020-11-26T17:24:42,577Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:42,585Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411482514) {}
[INFO ] 2020-11-26T17:24:42,585Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:42,585Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411482514) {}
[INFO ] 2020-11-26T17:24:42,585Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:42,591Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201126-172441.651-D8AC861A8658DCA8/nodes/2/cordapps] {}
[INFO ] 2020-11-26T17:24:42,592Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172441.651-D8AC861A8658DCA8/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172441.651-D8AC861A8658DCA8/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-11-26T17:24:42,592Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172441.651-D8AC861A8658DCA8/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-11-26T17:24:42,600Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172441.651-D8AC861A8658DCA8/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-11-26T17:24:42,624Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:42,625Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-26T17:24:42,625Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-26T17:24:42,644Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-11-26T17:24:42,646Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-26T17:24:41.651Z
      epoch=1
  } {}
[WARN ] 2020-11-26T17:24:42,813Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.example.schema.IOUSchema v1 {}
[INFO ] 2020-11-26T17:24:42,822Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-26T17:24:42,823Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:42,823Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:42,888Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:42,888Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-11-26T17:24:42,898Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-26T17:24:42,898Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411482898) {}
[INFO ] 2020-11-26T17:24:42,899Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:42,902Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411482898) {}
[INFO ] 2020-11-26T17:24:42,906Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-26T17:24:42,906Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-26T17:24:42,906Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-26T17:24:42,908Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411482898) {}
[INFO ] 2020-11-26T17:24:42,911Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:42,926Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B9F752269DF5534033B7F71155D37338ED66E85901C784FD208FCD389B59670D uploader=app filename=CorDapp Example {}
[INFO ] 2020-11-26T17:24:42,936Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411482898) {}
[INFO ] 2020-11-26T17:24:42,936Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411482103) {}
[INFO ] 2020-11-26T17:24:42,937Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-26T17:24:42,942Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411482898) {}
[INFO ] 2020-11-26T17:24:42,942Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:42,946Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411482514) {}
[INFO ] 2020-11-26T17:24:42,947Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:42,952Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411482898) {}
[INFO ] 2020-11-26T17:24:42,952Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:42,957Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411482898) {}
[INFO ] 2020-11-26T17:24:42,957Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:42,957Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411482898) {}
[INFO ] 2020-11-26T17:24:42,957Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-11-26T17:24:42,958Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-11-26T17:24:42,958Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-11-26T17:24:42,958Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-11-26T17:24:42,958Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-11-26T17:24:43,051Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=dbe6b349-4b27-46c2-8fe5-3996173a9796, invocation_id=77c111fb-badf-4ad1-95bb-9e1eb9dde6ba, invocation_timestamp=2020-11-26T17:24:43.036Z, origin=O=Mock Company 1, L=London, C=GB, session_id=77c111fb-badf-4ad1-95bb-9e1eb9dde6ba, session_timestamp=2020-11-26T17:24:43.036Z, thread-id=1065, tx_id=51BDCFE916DC08918FB37EB4E7BF4CA4C8FFD78D2A8CBACADE4678CC76AF81CF}
[INFO ] 2020-11-26T17:24:43,061Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=dbe6b349-4b27-46c2-8fe5-3996173a9796, invocation_id=77c111fb-badf-4ad1-95bb-9e1eb9dde6ba, invocation_timestamp=2020-11-26T17:24:43.036Z, origin=O=Mock Company 1, L=London, C=GB, session_id=77c111fb-badf-4ad1-95bb-9e1eb9dde6ba, session_timestamp=2020-11-26T17:24:43.036Z, thread-id=1065, tx_id=51BDCFE916DC08918FB37EB4E7BF4CA4C8FFD78D2A8CBACADE4678CC76AF81CF}
[INFO ] 2020-11-26T17:24:43,142Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=eb663fa0-5c31-4bbb-8f5c-2cfbf3cbf878, invocation_id=bc5d70dc-001f-4823-9a2c-16748ba8647b, invocation_timestamp=2020-11-26T17:24:42.959Z, origin=Only For Testing, session_id=bc5d70dc-001f-4823-9a2c-16748ba8647b, session_timestamp=2020-11-26T17:24:42.959Z, thread-id=1065, tx_id=51BDCFE916DC08918FB37EB4E7BF4CA4C8FFD78D2A8CBACADE4678CC76AF81CF}
[INFO ] 2020-11-26T17:24:43,142Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=eb663fa0-5c31-4bbb-8f5c-2cfbf3cbf878, invocation_id=bc5d70dc-001f-4823-9a2c-16748ba8647b, invocation_timestamp=2020-11-26T17:24:42.959Z, origin=Only For Testing, session_id=bc5d70dc-001f-4823-9a2c-16748ba8647b, session_timestamp=2020-11-26T17:24:42.959Z, thread-id=1065, tx_id=51BDCFE916DC08918FB37EB4E7BF4CA4C8FFD78D2A8CBACADE4678CC76AF81CF}
[INFO ] 2020-11-26T17:24:43,156Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=eb663fa0-5c31-4bbb-8f5c-2cfbf3cbf878, invocation_id=bc5d70dc-001f-4823-9a2c-16748ba8647b, invocation_timestamp=2020-11-26T17:24:42.959Z, origin=Only For Testing, session_id=bc5d70dc-001f-4823-9a2c-16748ba8647b, session_timestamp=2020-11-26T17:24:42.959Z, thread-id=1065, tx_id=51BDCFE916DC08918FB37EB4E7BF4CA4C8FFD78D2A8CBACADE4678CC76AF81CF}
[INFO ] 2020-11-26T17:24:43,172Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=dbe6b349-4b27-46c2-8fe5-3996173a9796, invocation_id=77c111fb-badf-4ad1-95bb-9e1eb9dde6ba, invocation_timestamp=2020-11-26T17:24:43.036Z, origin=O=Mock Company 1, L=London, C=GB, session_id=77c111fb-badf-4ad1-95bb-9e1eb9dde6ba, session_timestamp=2020-11-26T17:24:43.036Z, thread-id=1065, tx_id=51BDCFE916DC08918FB37EB4E7BF4CA4C8FFD78D2A8CBACADE4678CC76AF81CF}
[INFO ] 2020-11-26T17:24:43,179Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=dbe6b349-4b27-46c2-8fe5-3996173a9796, invocation_id=77c111fb-badf-4ad1-95bb-9e1eb9dde6ba, invocation_timestamp=2020-11-26T17:24:43.036Z, origin=O=Mock Company 1, L=London, C=GB, session_id=77c111fb-badf-4ad1-95bb-9e1eb9dde6ba, session_timestamp=2020-11-26T17:24:43.036Z, thread-id=1065, tx_id=51BDCFE916DC08918FB37EB4E7BF4CA4C8FFD78D2A8CBACADE4678CC76AF81CF}
[INFO ] 2020-11-26T17:24:43,181Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=dbe6b349-4b27-46c2-8fe5-3996173a9796, invocation_id=77c111fb-badf-4ad1-95bb-9e1eb9dde6ba, invocation_timestamp=2020-11-26T17:24:43.036Z, origin=O=Mock Company 1, L=London, C=GB, session_id=77c111fb-badf-4ad1-95bb-9e1eb9dde6ba, session_timestamp=2020-11-26T17:24:43.036Z, thread-id=1065, tx_id=51BDCFE916DC08918FB37EB4E7BF4CA4C8FFD78D2A8CBACADE4678CC76AF81CF}
[INFO ] 2020-11-26T17:24:43,187Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=dbe6b349-4b27-46c2-8fe5-3996173a9796, invocation_id=77c111fb-badf-4ad1-95bb-9e1eb9dde6ba, invocation_timestamp=2020-11-26T17:24:43.036Z, origin=O=Mock Company 1, L=London, C=GB, session_id=77c111fb-badf-4ad1-95bb-9e1eb9dde6ba, session_timestamp=2020-11-26T17:24:43.036Z, thread-id=1065, tx_id=51BDCFE916DC08918FB37EB4E7BF4CA4C8FFD78D2A8CBACADE4678CC76AF81CF}
[INFO ] 2020-11-26T17:24:43,194Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=eb663fa0-5c31-4bbb-8f5c-2cfbf3cbf878, invocation_id=bc5d70dc-001f-4823-9a2c-16748ba8647b, invocation_timestamp=2020-11-26T17:24:42.959Z, origin=Only For Testing, session_id=bc5d70dc-001f-4823-9a2c-16748ba8647b, session_timestamp=2020-11-26T17:24:42.959Z, thread-id=1065, tx_id=51BDCFE916DC08918FB37EB4E7BF4CA4C8FFD78D2A8CBACADE4678CC76AF81CF}
[INFO ] 2020-11-26T17:24:43,194Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=eb663fa0-5c31-4bbb-8f5c-2cfbf3cbf878, invocation_id=bc5d70dc-001f-4823-9a2c-16748ba8647b, invocation_timestamp=2020-11-26T17:24:42.959Z, origin=Only For Testing, session_id=bc5d70dc-001f-4823-9a2c-16748ba8647b, session_timestamp=2020-11-26T17:24:42.959Z, thread-id=1065, tx_id=51BDCFE916DC08918FB37EB4E7BF4CA4C8FFD78D2A8CBACADE4678CC76AF81CF}
[INFO ] 2020-11-26T17:24:43,201Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-7) {}
[INFO ] 2020-11-26T17:24:43,205Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-26T17:24:43,205Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:43,206Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-8) {}
[INFO ] 2020-11-26T17:24:43,210Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-26T17:24:43,210Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:43,211Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-9) {}
[INFO ] 2020-11-26T17:24:43,215Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-26T17:24:43,215Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:43,265Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201126-172443.215-BCFA6FF208306003/nodes/0/cordapps] {}
[INFO ] 2020-11-26T17:24:43,265Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172443.215-BCFA6FF208306003/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172443.215-BCFA6FF208306003/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-11-26T17:24:43,265Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172443.215-BCFA6FF208306003/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-11-26T17:24:43,269Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172443.215-BCFA6FF208306003/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-11-26T17:24:43,282Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:43,282Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-26T17:24:43,283Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-26T17:24:43,285Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-11-26T17:24:43,289Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-26T17:24:43.215Z
      epoch=1
  } {}
[WARN ] 2020-11-26T17:24:43,490Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.example.schema.IOUSchema v1 {}
[INFO ] 2020-11-26T17:24:43,497Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-26T17:24:43,502Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-26T17:24:43,502Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-26T17:24:43,580Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-26T17:24:43,583Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-26T17:24:43,583Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411483583) {}
[INFO ] 2020-11-26T17:24:43,585Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-26T17:24:43,596Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411483583) {}
[INFO ] 2020-11-26T17:24:43,603Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-26T17:24:43,603Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-26T17:24:43,603Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-26T17:24:43,605Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411483583) {}
[INFO ] 2020-11-26T17:24:43,607Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:43,626Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B9F752269DF5534033B7F71155D37338ED66E85901C784FD208FCD389B59670D uploader=app filename=CorDapp Example {}
[INFO ] 2020-11-26T17:24:43,628Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2020-11-26T17:24:43,638Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411483583) {}
[INFO ] 2020-11-26T17:24:43,638Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411483583) {}
[INFO ] 2020-11-26T17:24:43,638Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:43,638Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411483583) {}
[INFO ] 2020-11-26T17:24:43,638Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:43,643Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201126-172443.215-BCFA6FF208306003/nodes/1/cordapps] {}
[INFO ] 2020-11-26T17:24:43,643Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172443.215-BCFA6FF208306003/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172443.215-BCFA6FF208306003/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-11-26T17:24:43,643Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172443.215-BCFA6FF208306003/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-11-26T17:24:43,648Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172443.215-BCFA6FF208306003/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-11-26T17:24:43,664Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:43,664Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-26T17:24:43,665Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-26T17:24:43,683Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-11-26T17:24:43,691Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-26T17:24:43.215Z
      epoch=1
  } {}
[WARN ] 2020-11-26T17:24:43,872Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.example.schema.IOUSchema v1 {}
[INFO ] 2020-11-26T17:24:43,880Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-26T17:24:43,882Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:43,882Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:43,956Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:43,957Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-11-26T17:24:43,967Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-26T17:24:43,967Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411483967) {}
[INFO ] 2020-11-26T17:24:43,967Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:43,970Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411483967) {}
[INFO ] 2020-11-26T17:24:43,973Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-26T17:24:43,973Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-26T17:24:43,973Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-26T17:24:43,975Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411483967) {}
[INFO ] 2020-11-26T17:24:43,977Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:43,992Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B9F752269DF5534033B7F71155D37338ED66E85901C784FD208FCD389B59670D uploader=app filename=CorDapp Example {}
[INFO ] 2020-11-26T17:24:44,000Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411483967) {}
[INFO ] 2020-11-26T17:24:44,001Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411483583) {}
[INFO ] 2020-11-26T17:24:44,001Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-26T17:24:44,005Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411483967) {}
[INFO ] 2020-11-26T17:24:44,006Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:44,010Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411483967) {}
[INFO ] 2020-11-26T17:24:44,010Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:44,010Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411483967) {}
[INFO ] 2020-11-26T17:24:44,010Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:44,015Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201126-172443.215-BCFA6FF208306003/nodes/2/cordapps] {}
[INFO ] 2020-11-26T17:24:44,015Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172443.215-BCFA6FF208306003/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172443.215-BCFA6FF208306003/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-11-26T17:24:44,015Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172443.215-BCFA6FF208306003/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-11-26T17:24:44,019Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172443.215-BCFA6FF208306003/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-11-26T17:24:44,033Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:44,033Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-26T17:24:44,034Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-26T17:24:44,050Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-11-26T17:24:44,051Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-26T17:24:43.215Z
      epoch=1
  } {}
[WARN ] 2020-11-26T17:24:44,212Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.example.schema.IOUSchema v1 {}
[INFO ] 2020-11-26T17:24:44,219Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-26T17:24:44,220Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:44,220Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:44,281Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:44,282Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-11-26T17:24:44,294Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-26T17:24:44,294Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411484294) {}
[INFO ] 2020-11-26T17:24:44,295Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:44,298Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411484294) {}
[INFO ] 2020-11-26T17:24:44,301Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-26T17:24:44,301Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-26T17:24:44,301Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-26T17:24:44,303Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411484294) {}
[INFO ] 2020-11-26T17:24:44,305Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:44,320Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B9F752269DF5534033B7F71155D37338ED66E85901C784FD208FCD389B59670D uploader=app filename=CorDapp Example {}
[INFO ] 2020-11-26T17:24:44,332Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411484294) {}
[INFO ] 2020-11-26T17:24:44,332Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411483583) {}
[INFO ] 2020-11-26T17:24:44,332Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-26T17:24:44,339Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411484294) {}
[INFO ] 2020-11-26T17:24:44,340Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:44,346Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411483967) {}
[INFO ] 2020-11-26T17:24:44,346Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:44,353Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411484294) {}
[INFO ] 2020-11-26T17:24:44,354Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:44,359Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411484294) {}
[INFO ] 2020-11-26T17:24:44,359Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:44,360Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411484294) {}
[INFO ] 2020-11-26T17:24:44,360Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-11-26T17:24:44,360Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-11-26T17:24:44,360Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-11-26T17:24:44,360Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-11-26T17:24:44,360Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-11-26T17:24:44,454Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=9ac439c8-f6b5-4f17-8951-1b9aca677b3c, invocation_id=02b40bac-74ea-4ab4-a195-49accab2b77d, invocation_timestamp=2020-11-26T17:24:44.441Z, origin=O=Mock Company 1, L=London, C=GB, session_id=02b40bac-74ea-4ab4-a195-49accab2b77d, session_timestamp=2020-11-26T17:24:44.441Z, thread-id=1416, tx_id=3BADC5C60B1899C854B6BF1DB136508D73F4A667D3BBBB670C13D406932A117E}
[INFO ] 2020-11-26T17:24:44,463Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=9ac439c8-f6b5-4f17-8951-1b9aca677b3c, invocation_id=02b40bac-74ea-4ab4-a195-49accab2b77d, invocation_timestamp=2020-11-26T17:24:44.441Z, origin=O=Mock Company 1, L=London, C=GB, session_id=02b40bac-74ea-4ab4-a195-49accab2b77d, session_timestamp=2020-11-26T17:24:44.441Z, thread-id=1416, tx_id=3BADC5C60B1899C854B6BF1DB136508D73F4A667D3BBBB670C13D406932A117E}
[INFO ] 2020-11-26T17:24:44,534Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=9f7818ea-97d1-4ede-8943-6a4ee7aaa64b, invocation_id=c239960b-c914-444a-8792-41e81c1ec93d, invocation_timestamp=2020-11-26T17:24:44.361Z, origin=Only For Testing, session_id=c239960b-c914-444a-8792-41e81c1ec93d, session_timestamp=2020-11-26T17:24:44.361Z, thread-id=1416, tx_id=3BADC5C60B1899C854B6BF1DB136508D73F4A667D3BBBB670C13D406932A117E}
[INFO ] 2020-11-26T17:24:44,534Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=9f7818ea-97d1-4ede-8943-6a4ee7aaa64b, invocation_id=c239960b-c914-444a-8792-41e81c1ec93d, invocation_timestamp=2020-11-26T17:24:44.361Z, origin=Only For Testing, session_id=c239960b-c914-444a-8792-41e81c1ec93d, session_timestamp=2020-11-26T17:24:44.361Z, thread-id=1416, tx_id=3BADC5C60B1899C854B6BF1DB136508D73F4A667D3BBBB670C13D406932A117E}
[INFO ] 2020-11-26T17:24:44,547Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=9f7818ea-97d1-4ede-8943-6a4ee7aaa64b, invocation_id=c239960b-c914-444a-8792-41e81c1ec93d, invocation_timestamp=2020-11-26T17:24:44.361Z, origin=Only For Testing, session_id=c239960b-c914-444a-8792-41e81c1ec93d, session_timestamp=2020-11-26T17:24:44.361Z, thread-id=1416, tx_id=3BADC5C60B1899C854B6BF1DB136508D73F4A667D3BBBB670C13D406932A117E}
[INFO ] 2020-11-26T17:24:44,560Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=9ac439c8-f6b5-4f17-8951-1b9aca677b3c, invocation_id=02b40bac-74ea-4ab4-a195-49accab2b77d, invocation_timestamp=2020-11-26T17:24:44.441Z, origin=O=Mock Company 1, L=London, C=GB, session_id=02b40bac-74ea-4ab4-a195-49accab2b77d, session_timestamp=2020-11-26T17:24:44.441Z, thread-id=1416, tx_id=3BADC5C60B1899C854B6BF1DB136508D73F4A667D3BBBB670C13D406932A117E}
[INFO ] 2020-11-26T17:24:44,566Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=9ac439c8-f6b5-4f17-8951-1b9aca677b3c, invocation_id=02b40bac-74ea-4ab4-a195-49accab2b77d, invocation_timestamp=2020-11-26T17:24:44.441Z, origin=O=Mock Company 1, L=London, C=GB, session_id=02b40bac-74ea-4ab4-a195-49accab2b77d, session_timestamp=2020-11-26T17:24:44.441Z, thread-id=1416, tx_id=3BADC5C60B1899C854B6BF1DB136508D73F4A667D3BBBB670C13D406932A117E}
[INFO ] 2020-11-26T17:24:44,570Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=9ac439c8-f6b5-4f17-8951-1b9aca677b3c, invocation_id=02b40bac-74ea-4ab4-a195-49accab2b77d, invocation_timestamp=2020-11-26T17:24:44.441Z, origin=O=Mock Company 1, L=London, C=GB, session_id=02b40bac-74ea-4ab4-a195-49accab2b77d, session_timestamp=2020-11-26T17:24:44.441Z, thread-id=1416, tx_id=3BADC5C60B1899C854B6BF1DB136508D73F4A667D3BBBB670C13D406932A117E}
[INFO ] 2020-11-26T17:24:44,577Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=9ac439c8-f6b5-4f17-8951-1b9aca677b3c, invocation_id=02b40bac-74ea-4ab4-a195-49accab2b77d, invocation_timestamp=2020-11-26T17:24:44.441Z, origin=O=Mock Company 1, L=London, C=GB, session_id=02b40bac-74ea-4ab4-a195-49accab2b77d, session_timestamp=2020-11-26T17:24:44.441Z, thread-id=1416, tx_id=3BADC5C60B1899C854B6BF1DB136508D73F4A667D3BBBB670C13D406932A117E}
[INFO ] 2020-11-26T17:24:44,586Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=9f7818ea-97d1-4ede-8943-6a4ee7aaa64b, invocation_id=c239960b-c914-444a-8792-41e81c1ec93d, invocation_timestamp=2020-11-26T17:24:44.361Z, origin=Only For Testing, session_id=c239960b-c914-444a-8792-41e81c1ec93d, session_timestamp=2020-11-26T17:24:44.361Z, thread-id=1416, tx_id=3BADC5C60B1899C854B6BF1DB136508D73F4A667D3BBBB670C13D406932A117E}
[INFO ] 2020-11-26T17:24:44,586Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=9f7818ea-97d1-4ede-8943-6a4ee7aaa64b, invocation_id=c239960b-c914-444a-8792-41e81c1ec93d, invocation_timestamp=2020-11-26T17:24:44.361Z, origin=Only For Testing, session_id=c239960b-c914-444a-8792-41e81c1ec93d, session_timestamp=2020-11-26T17:24:44.361Z, thread-id=1416, tx_id=3BADC5C60B1899C854B6BF1DB136508D73F4A667D3BBBB670C13D406932A117E}
[INFO ] 2020-11-26T17:24:44,596Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-10) {}
[INFO ] 2020-11-26T17:24:44,601Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-26T17:24:44,601Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:44,602Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-11) {}
[INFO ] 2020-11-26T17:24:44,606Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-26T17:24:44,606Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:44,607Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-12) {}
[INFO ] 2020-11-26T17:24:44,611Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-26T17:24:44,611Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:44,659Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201126-172444.612-CE141EECA32662E6/nodes/0/cordapps] {}
[INFO ] 2020-11-26T17:24:44,659Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172444.612-CE141EECA32662E6/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172444.612-CE141EECA32662E6/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-11-26T17:24:44,659Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172444.612-CE141EECA32662E6/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-11-26T17:24:44,664Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172444.612-CE141EECA32662E6/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-11-26T17:24:44,677Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:44,678Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-26T17:24:44,678Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-26T17:24:44,681Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-11-26T17:24:44,684Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-26T17:24:44.612Z
      epoch=1
  } {}
[WARN ] 2020-11-26T17:24:44,886Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.example.schema.IOUSchema v1 {}
[INFO ] 2020-11-26T17:24:44,892Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-26T17:24:44,897Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-26T17:24:44,897Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-26T17:24:44,960Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-26T17:24:44,962Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-26T17:24:44,962Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411484962) {}
[INFO ] 2020-11-26T17:24:44,963Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-26T17:24:44,969Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411484962) {}
[INFO ] 2020-11-26T17:24:44,975Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-26T17:24:44,975Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-26T17:24:44,975Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-26T17:24:44,978Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411484962) {}
[INFO ] 2020-11-26T17:24:44,980Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:44,996Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B9F752269DF5534033B7F71155D37338ED66E85901C784FD208FCD389B59670D uploader=app filename=CorDapp Example {}
[INFO ] 2020-11-26T17:24:44,997Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2020-11-26T17:24:45,005Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411484962) {}
[INFO ] 2020-11-26T17:24:45,005Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411484962) {}
[INFO ] 2020-11-26T17:24:45,005Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:45,005Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411484962) {}
[INFO ] 2020-11-26T17:24:45,005Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:45,012Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201126-172444.612-CE141EECA32662E6/nodes/1/cordapps] {}
[INFO ] 2020-11-26T17:24:45,012Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172444.612-CE141EECA32662E6/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172444.612-CE141EECA32662E6/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-11-26T17:24:45,012Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172444.612-CE141EECA32662E6/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-11-26T17:24:45,015Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172444.612-CE141EECA32662E6/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-11-26T17:24:45,028Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:45,028Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-26T17:24:45,029Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-26T17:24:45,044Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-11-26T17:24:45,046Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-26T17:24:44.612Z
      epoch=1
  } {}
[WARN ] 2020-11-26T17:24:45,184Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.example.schema.IOUSchema v1 {}
[INFO ] 2020-11-26T17:24:45,191Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-26T17:24:45,192Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:45,192Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:45,259Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:45,259Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-11-26T17:24:45,269Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-26T17:24:45,269Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411485269) {}
[INFO ] 2020-11-26T17:24:45,270Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:45,273Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411485269) {}
[INFO ] 2020-11-26T17:24:45,275Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-26T17:24:45,276Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-26T17:24:45,276Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-26T17:24:45,277Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411485269) {}
[INFO ] 2020-11-26T17:24:45,279Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:45,294Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B9F752269DF5534033B7F71155D37338ED66E85901C784FD208FCD389B59670D uploader=app filename=CorDapp Example {}
[INFO ] 2020-11-26T17:24:45,302Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411485269) {}
[INFO ] 2020-11-26T17:24:45,302Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411484962) {}
[INFO ] 2020-11-26T17:24:45,303Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-26T17:24:45,307Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411485269) {}
[INFO ] 2020-11-26T17:24:45,307Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:45,311Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411485269) {}
[INFO ] 2020-11-26T17:24:45,311Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:45,311Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411485269) {}
[INFO ] 2020-11-26T17:24:45,311Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:45,316Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201126-172444.612-CE141EECA32662E6/nodes/2/cordapps] {}
[INFO ] 2020-11-26T17:24:45,316Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172444.612-CE141EECA32662E6/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172444.612-CE141EECA32662E6/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-11-26T17:24:45,316Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172444.612-CE141EECA32662E6/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-11-26T17:24:45,320Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172444.612-CE141EECA32662E6/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-11-26T17:24:45,336Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:45,336Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-26T17:24:45,337Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-26T17:24:45,353Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-11-26T17:24:45,355Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-26T17:24:44.612Z
      epoch=1
  } {}
[WARN ] 2020-11-26T17:24:45,712Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.example.schema.IOUSchema v1 {}
[INFO ] 2020-11-26T17:24:45,719Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-26T17:24:45,720Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:45,720Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:45,778Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:45,779Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-11-26T17:24:45,790Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-26T17:24:45,790Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411485790) {}
[INFO ] 2020-11-26T17:24:45,791Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:45,795Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411485790) {}
[INFO ] 2020-11-26T17:24:45,797Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-26T17:24:45,798Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-26T17:24:45,798Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-26T17:24:45,799Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411485790) {}
[INFO ] 2020-11-26T17:24:45,801Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:45,815Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B9F752269DF5534033B7F71155D37338ED66E85901C784FD208FCD389B59670D uploader=app filename=CorDapp Example {}
[INFO ] 2020-11-26T17:24:45,823Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411485790) {}
[INFO ] 2020-11-26T17:24:45,824Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411484962) {}
[INFO ] 2020-11-26T17:24:45,824Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-26T17:24:45,828Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411485790) {}
[INFO ] 2020-11-26T17:24:45,829Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:45,832Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411485269) {}
[INFO ] 2020-11-26T17:24:45,833Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:45,837Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411485790) {}
[INFO ] 2020-11-26T17:24:45,837Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:45,842Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411485790) {}
[INFO ] 2020-11-26T17:24:45,842Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:45,842Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411485790) {}
[INFO ] 2020-11-26T17:24:45,842Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-11-26T17:24:45,842Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-11-26T17:24:45,842Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-11-26T17:24:45,842Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-11-26T17:24:45,842Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-11-26T17:24:45,914Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=735f186c-a88e-43ca-8c57-abec25934846, invocation_id=6253004c-ab82-42b9-acce-d72a77bae4f0, invocation_timestamp=2020-11-26T17:24:45.903Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6253004c-ab82-42b9-acce-d72a77bae4f0, session_timestamp=2020-11-26T17:24:45.903Z, thread-id=1767, tx_id=499D6D800D77DE6C17224452F1F2B9135B467DBEB502951AA95FB02B6267F9CA}
[INFO ] 2020-11-26T17:24:45,922Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=735f186c-a88e-43ca-8c57-abec25934846, invocation_id=6253004c-ab82-42b9-acce-d72a77bae4f0, invocation_timestamp=2020-11-26T17:24:45.903Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6253004c-ab82-42b9-acce-d72a77bae4f0, session_timestamp=2020-11-26T17:24:45.903Z, thread-id=1767, tx_id=499D6D800D77DE6C17224452F1F2B9135B467DBEB502951AA95FB02B6267F9CA}
[INFO ] 2020-11-26T17:24:45,998Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=aecb6084-e7ae-4c04-ada1-a8298c1d630e, invocation_id=286ddaa0-b054-4d80-8972-a7d327af562f, invocation_timestamp=2020-11-26T17:24:45.843Z, origin=Only For Testing, session_id=286ddaa0-b054-4d80-8972-a7d327af562f, session_timestamp=2020-11-26T17:24:45.843Z, thread-id=1767, tx_id=499D6D800D77DE6C17224452F1F2B9135B467DBEB502951AA95FB02B6267F9CA}
[INFO ] 2020-11-26T17:24:45,998Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=aecb6084-e7ae-4c04-ada1-a8298c1d630e, invocation_id=286ddaa0-b054-4d80-8972-a7d327af562f, invocation_timestamp=2020-11-26T17:24:45.843Z, origin=Only For Testing, session_id=286ddaa0-b054-4d80-8972-a7d327af562f, session_timestamp=2020-11-26T17:24:45.843Z, thread-id=1767, tx_id=499D6D800D77DE6C17224452F1F2B9135B467DBEB502951AA95FB02B6267F9CA}
[INFO ] 2020-11-26T17:24:46,011Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=aecb6084-e7ae-4c04-ada1-a8298c1d630e, invocation_id=286ddaa0-b054-4d80-8972-a7d327af562f, invocation_timestamp=2020-11-26T17:24:45.843Z, origin=Only For Testing, session_id=286ddaa0-b054-4d80-8972-a7d327af562f, session_timestamp=2020-11-26T17:24:45.843Z, thread-id=1767, tx_id=499D6D800D77DE6C17224452F1F2B9135B467DBEB502951AA95FB02B6267F9CA}
[INFO ] 2020-11-26T17:24:46,025Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=735f186c-a88e-43ca-8c57-abec25934846, invocation_id=6253004c-ab82-42b9-acce-d72a77bae4f0, invocation_timestamp=2020-11-26T17:24:45.903Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6253004c-ab82-42b9-acce-d72a77bae4f0, session_timestamp=2020-11-26T17:24:45.903Z, thread-id=1767, tx_id=499D6D800D77DE6C17224452F1F2B9135B467DBEB502951AA95FB02B6267F9CA}
[INFO ] 2020-11-26T17:24:46,032Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=735f186c-a88e-43ca-8c57-abec25934846, invocation_id=6253004c-ab82-42b9-acce-d72a77bae4f0, invocation_timestamp=2020-11-26T17:24:45.903Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6253004c-ab82-42b9-acce-d72a77bae4f0, session_timestamp=2020-11-26T17:24:45.903Z, thread-id=1767, tx_id=499D6D800D77DE6C17224452F1F2B9135B467DBEB502951AA95FB02B6267F9CA}
[INFO ] 2020-11-26T17:24:46,034Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=735f186c-a88e-43ca-8c57-abec25934846, invocation_id=6253004c-ab82-42b9-acce-d72a77bae4f0, invocation_timestamp=2020-11-26T17:24:45.903Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6253004c-ab82-42b9-acce-d72a77bae4f0, session_timestamp=2020-11-26T17:24:45.903Z, thread-id=1767, tx_id=499D6D800D77DE6C17224452F1F2B9135B467DBEB502951AA95FB02B6267F9CA}
[INFO ] 2020-11-26T17:24:46,040Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=735f186c-a88e-43ca-8c57-abec25934846, invocation_id=6253004c-ab82-42b9-acce-d72a77bae4f0, invocation_timestamp=2020-11-26T17:24:45.903Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6253004c-ab82-42b9-acce-d72a77bae4f0, session_timestamp=2020-11-26T17:24:45.903Z, thread-id=1767, tx_id=499D6D800D77DE6C17224452F1F2B9135B467DBEB502951AA95FB02B6267F9CA}
[INFO ] 2020-11-26T17:24:46,046Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=aecb6084-e7ae-4c04-ada1-a8298c1d630e, invocation_id=286ddaa0-b054-4d80-8972-a7d327af562f, invocation_timestamp=2020-11-26T17:24:45.843Z, origin=Only For Testing, session_id=286ddaa0-b054-4d80-8972-a7d327af562f, session_timestamp=2020-11-26T17:24:45.843Z, thread-id=1767, tx_id=499D6D800D77DE6C17224452F1F2B9135B467DBEB502951AA95FB02B6267F9CA}
[INFO ] 2020-11-26T17:24:46,046Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=aecb6084-e7ae-4c04-ada1-a8298c1d630e, invocation_id=286ddaa0-b054-4d80-8972-a7d327af562f, invocation_timestamp=2020-11-26T17:24:45.843Z, origin=Only For Testing, session_id=286ddaa0-b054-4d80-8972-a7d327af562f, session_timestamp=2020-11-26T17:24:45.843Z, thread-id=1767, tx_id=499D6D800D77DE6C17224452F1F2B9135B467DBEB502951AA95FB02B6267F9CA}
[INFO ] 2020-11-26T17:24:46,089Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-13) {}
[INFO ] 2020-11-26T17:24:46,093Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-26T17:24:46,093Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:46,093Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-14) {}
[INFO ] 2020-11-26T17:24:46,096Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-26T17:24:46,096Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:46,097Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-15) {}
[INFO ] 2020-11-26T17:24:46,100Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-26T17:24:46,100Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:46,138Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201126-172446.101-84FFD5E33D944F1A/nodes/0/cordapps] {}
[INFO ] 2020-11-26T17:24:46,139Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172446.101-84FFD5E33D944F1A/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172446.101-84FFD5E33D944F1A/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-11-26T17:24:46,139Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172446.101-84FFD5E33D944F1A/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-11-26T17:24:46,143Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172446.101-84FFD5E33D944F1A/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-11-26T17:24:46,155Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:46,156Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-26T17:24:46,156Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-26T17:24:46,158Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-11-26T17:24:46,161Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-26T17:24:46.101Z
      epoch=1
  } {}
[WARN ] 2020-11-26T17:24:46,352Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.example.schema.IOUSchema v1 {}
[INFO ] 2020-11-26T17:24:46,358Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-26T17:24:46,364Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-26T17:24:46,364Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-26T17:24:46,425Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-26T17:24:46,428Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-26T17:24:46,428Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411486428) {}
[INFO ] 2020-11-26T17:24:46,428Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-26T17:24:46,435Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411486428) {}
[INFO ] 2020-11-26T17:24:46,439Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-26T17:24:46,439Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-26T17:24:46,439Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-26T17:24:46,446Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411486428) {}
[INFO ] 2020-11-26T17:24:46,448Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:46,464Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B9F752269DF5534033B7F71155D37338ED66E85901C784FD208FCD389B59670D uploader=app filename=CorDapp Example {}
[INFO ] 2020-11-26T17:24:46,465Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2020-11-26T17:24:46,474Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411486428) {}
[INFO ] 2020-11-26T17:24:46,475Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411486428) {}
[INFO ] 2020-11-26T17:24:46,475Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:46,475Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411486428) {}
[INFO ] 2020-11-26T17:24:46,475Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:46,479Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201126-172446.101-84FFD5E33D944F1A/nodes/1/cordapps] {}
[INFO ] 2020-11-26T17:24:46,479Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172446.101-84FFD5E33D944F1A/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172446.101-84FFD5E33D944F1A/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-11-26T17:24:46,479Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172446.101-84FFD5E33D944F1A/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-11-26T17:24:46,484Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172446.101-84FFD5E33D944F1A/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-11-26T17:24:46,504Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:46,504Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-26T17:24:46,505Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-26T17:24:46,521Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-11-26T17:24:46,523Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-26T17:24:46.101Z
      epoch=1
  } {}
[WARN ] 2020-11-26T17:24:46,661Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.example.schema.IOUSchema v1 {}
[INFO ] 2020-11-26T17:24:46,667Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-26T17:24:46,668Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:46,668Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:46,729Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:46,730Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-11-26T17:24:46,741Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-26T17:24:46,741Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411486741) {}
[INFO ] 2020-11-26T17:24:46,742Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:46,745Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411486741) {}
[INFO ] 2020-11-26T17:24:46,748Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-26T17:24:46,748Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-26T17:24:46,748Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-26T17:24:46,749Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411486741) {}
[INFO ] 2020-11-26T17:24:46,752Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:46,767Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B9F752269DF5534033B7F71155D37338ED66E85901C784FD208FCD389B59670D uploader=app filename=CorDapp Example {}
[INFO ] 2020-11-26T17:24:46,774Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411486741) {}
[INFO ] 2020-11-26T17:24:46,775Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411486428) {}
[INFO ] 2020-11-26T17:24:46,775Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-26T17:24:46,779Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411486741) {}
[INFO ] 2020-11-26T17:24:46,779Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:46,784Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411486741) {}
[INFO ] 2020-11-26T17:24:46,785Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:46,785Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411486741) {}
[INFO ] 2020-11-26T17:24:46,785Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:46,789Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201126-172446.101-84FFD5E33D944F1A/nodes/2/cordapps] {}
[INFO ] 2020-11-26T17:24:46,789Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172446.101-84FFD5E33D944F1A/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172446.101-84FFD5E33D944F1A/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-11-26T17:24:46,789Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172446.101-84FFD5E33D944F1A/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-11-26T17:24:46,793Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/cordapp-example-kyc/workflows-java/build/mock-network/20201126-172446.101-84FFD5E33D944F1A/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-11-26T17:24:46,805Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:46,806Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-26T17:24:46,806Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-26T17:24:46,819Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-11-26T17:24:46,820Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-26T17:24:46.101Z
      epoch=1
  } {}
[WARN ] 2020-11-26T17:24:46,953Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.example.schema.IOUSchema v1 {}
[INFO ] 2020-11-26T17:24:46,959Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-26T17:24:46,960Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:46,960Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:47,016Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-11-26T17:24:47,016Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-11-26T17:24:47,026Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-26T17:24:47,026Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411487026) {}
[INFO ] 2020-11-26T17:24:47,027Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:47,030Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411487026) {}
[INFO ] 2020-11-26T17:24:47,032Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-26T17:24:47,032Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-26T17:24:47,032Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-26T17:24:47,035Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411487026) {}
[INFO ] 2020-11-26T17:24:47,038Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:47,052Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B9F752269DF5534033B7F71155D37338ED66E85901C784FD208FCD389B59670D uploader=app filename=CorDapp Example {}
[INFO ] 2020-11-26T17:24:47,060Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411487026) {}
[INFO ] 2020-11-26T17:24:47,060Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1606411486428) {}
[INFO ] 2020-11-26T17:24:47,060Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-26T17:24:47,065Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411487026) {}
[INFO ] 2020-11-26T17:24:47,065Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:47,069Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1606411486741) {}
[INFO ] 2020-11-26T17:24:47,070Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:47,074Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411487026) {}
[INFO ] 2020-11-26T17:24:47,075Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-26T17:24:47,080Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411487026) {}
[INFO ] 2020-11-26T17:24:47,080Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-26T17:24:47,080Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1606411487026) {}
[INFO ] 2020-11-26T17:24:47,080Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-11-26T17:24:47,080Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-11-26T17:24:47,080Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-11-26T17:24:47,080Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-11-26T17:24:47,080Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-11-26T17:24:47,154Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=97c26c64-5c32-456b-a90b-02fab5194c9b, invocation_id=0279186e-3f4a-4986-9091-7ec6e83c7cb0, invocation_timestamp=2020-11-26T17:24:47.143Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0279186e-3f4a-4986-9091-7ec6e83c7cb0, session_timestamp=2020-11-26T17:24:47.143Z, thread-id=2118, tx_id=207881D7437BFBE2D037A0B9AE85CACCCF6BB33D0012589E280E39AF7F593318}
[INFO ] 2020-11-26T17:24:47,161Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=97c26c64-5c32-456b-a90b-02fab5194c9b, invocation_id=0279186e-3f4a-4986-9091-7ec6e83c7cb0, invocation_timestamp=2020-11-26T17:24:47.143Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0279186e-3f4a-4986-9091-7ec6e83c7cb0, session_timestamp=2020-11-26T17:24:47.143Z, thread-id=2118, tx_id=207881D7437BFBE2D037A0B9AE85CACCCF6BB33D0012589E280E39AF7F593318}
[INFO ] 2020-11-26T17:24:47,227Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=7af97f6a-4d62-4b31-b1e8-059ebbba6d11, invocation_id=5941b587-7808-49a4-9570-05acaa0a1482, invocation_timestamp=2020-11-26T17:24:47.081Z, origin=Only For Testing, session_id=5941b587-7808-49a4-9570-05acaa0a1482, session_timestamp=2020-11-26T17:24:47.081Z, thread-id=2118, tx_id=207881D7437BFBE2D037A0B9AE85CACCCF6BB33D0012589E280E39AF7F593318}
[INFO ] 2020-11-26T17:24:47,227Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=7af97f6a-4d62-4b31-b1e8-059ebbba6d11, invocation_id=5941b587-7808-49a4-9570-05acaa0a1482, invocation_timestamp=2020-11-26T17:24:47.081Z, origin=Only For Testing, session_id=5941b587-7808-49a4-9570-05acaa0a1482, session_timestamp=2020-11-26T17:24:47.081Z, thread-id=2118, tx_id=207881D7437BFBE2D037A0B9AE85CACCCF6BB33D0012589E280E39AF7F593318}
[INFO ] 2020-11-26T17:24:47,238Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=7af97f6a-4d62-4b31-b1e8-059ebbba6d11, invocation_id=5941b587-7808-49a4-9570-05acaa0a1482, invocation_timestamp=2020-11-26T17:24:47.081Z, origin=Only For Testing, session_id=5941b587-7808-49a4-9570-05acaa0a1482, session_timestamp=2020-11-26T17:24:47.081Z, thread-id=2118, tx_id=207881D7437BFBE2D037A0B9AE85CACCCF6BB33D0012589E280E39AF7F593318}
[INFO ] 2020-11-26T17:24:47,249Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=97c26c64-5c32-456b-a90b-02fab5194c9b, invocation_id=0279186e-3f4a-4986-9091-7ec6e83c7cb0, invocation_timestamp=2020-11-26T17:24:47.143Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0279186e-3f4a-4986-9091-7ec6e83c7cb0, session_timestamp=2020-11-26T17:24:47.143Z, thread-id=2118, tx_id=207881D7437BFBE2D037A0B9AE85CACCCF6BB33D0012589E280E39AF7F593318}
[INFO ] 2020-11-26T17:24:47,256Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=97c26c64-5c32-456b-a90b-02fab5194c9b, invocation_id=0279186e-3f4a-4986-9091-7ec6e83c7cb0, invocation_timestamp=2020-11-26T17:24:47.143Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0279186e-3f4a-4986-9091-7ec6e83c7cb0, session_timestamp=2020-11-26T17:24:47.143Z, thread-id=2118, tx_id=207881D7437BFBE2D037A0B9AE85CACCCF6BB33D0012589E280E39AF7F593318}
[INFO ] 2020-11-26T17:24:47,258Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000011, flow-id=97c26c64-5c32-456b-a90b-02fab5194c9b, invocation_id=0279186e-3f4a-4986-9091-7ec6e83c7cb0, invocation_timestamp=2020-11-26T17:24:47.143Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0279186e-3f4a-4986-9091-7ec6e83c7cb0, session_timestamp=2020-11-26T17:24:47.143Z, thread-id=2118, tx_id=207881D7437BFBE2D037A0B9AE85CACCCF6BB33D0012589E280E39AF7F593318}
[INFO ] 2020-11-26T17:24:47,262Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000011, flow-id=97c26c64-5c32-456b-a90b-02fab5194c9b, invocation_id=0279186e-3f4a-4986-9091-7ec6e83c7cb0, invocation_timestamp=2020-11-26T17:24:47.143Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0279186e-3f4a-4986-9091-7ec6e83c7cb0, session_timestamp=2020-11-26T17:24:47.143Z, thread-id=2118, tx_id=207881D7437BFBE2D037A0B9AE85CACCCF6BB33D0012589E280E39AF7F593318}
[INFO ] 2020-11-26T17:24:47,268Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=7af97f6a-4d62-4b31-b1e8-059ebbba6d11, invocation_id=5941b587-7808-49a4-9570-05acaa0a1482, invocation_timestamp=2020-11-26T17:24:47.081Z, origin=Only For Testing, session_id=5941b587-7808-49a4-9570-05acaa0a1482, session_timestamp=2020-11-26T17:24:47.081Z, thread-id=2118, tx_id=207881D7437BFBE2D037A0B9AE85CACCCF6BB33D0012589E280E39AF7F593318}
[INFO ] 2020-11-26T17:24:47,268Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=7af97f6a-4d62-4b31-b1e8-059ebbba6d11, invocation_id=5941b587-7808-49a4-9570-05acaa0a1482, invocation_timestamp=2020-11-26T17:24:47.081Z, origin=Only For Testing, session_id=5941b587-7808-49a4-9570-05acaa0a1482, session_timestamp=2020-11-26T17:24:47.081Z, thread-id=2118, tx_id=207881D7437BFBE2D037A0B9AE85CACCCF6BB33D0012589E280E39AF7F593318}
[INFO ] 2020-11-26T17:24:47,273Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-16) {}
[INFO ] 2020-11-26T17:24:47,277Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-26T17:24:47,277Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:47,278Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-17) {}
[INFO ] 2020-11-26T17:24:47,281Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-26T17:24:47,281Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-26T17:24:47,282Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-18) {}
[INFO ] 2020-11-26T17:24:47,286Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-26T17:24:47,286Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
